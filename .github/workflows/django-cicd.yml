name: Django CI/CD on Amazon Linux 2023
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Enable maintenance mode
          sudo touch /var/www/html/maintenance.flag
          
          # Wait for existing requests to complete (adjust time as needed)
          sleep 10
          
          # Your existing deployment steps
          cd /home/${{ secrets.EC2_USER }}/
          if [ ! -d "Ebay-to-Web-Store" ]; then
            git clone https://github.com/Yashwanth-Chandrakumar/Ebay-to-Web-Store.git
            cd Ebay-to-Web-Store
          else
            cd Ebay-to-Web-Store
            git pull
          fi
          
          # Clean up Docker resources
          docker system prune -a --volumes -f
          
          # Build and deploy new container
          docker build -t yashwanthsc/pjsauto:latest ./backend/pjsautolit
          if docker ps --format '{{.Names}}' | grep -q pjs; then
            docker stop pjs
            docker rm pjs
          fi
          docker run -d --name pjs -p 8000:8000 yashwanthsc/pjsauto:latest
          
          # Wait for new container to be ready (adjust time as needed)
          sleep 15
          
          # Disable maintenance mode
          sudo rm -f /var/www/html/maintenance.flag
